package com.ui;

import com.dao.ProductsDAO;
import com.model.Product;
import com.ui.tablemodel.TableModel;

import javax.swing.*;
import javax.swing.border.TitledBorder;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.SQLException;

public class ProductFrame extends BaseFrame {
  private JPanel formPanel;
  private JButton saveButton;
  private JButton cancelButton;
  private JTextField nameInput;
  private JTextField priceInput;
  private JTextField inputStock;
  private String[] categories = {"Electronics", "Beauty", "Clothing", "Books", "Furniture", "Foods"};
  private JComboBox categoryBox;

  {
    // GUI initializer generated by IntelliJ IDEA GUI Designer
    // >>> IMPORTANT!! <<<
    // DO NOT EDIT OR ADD ANY CODE HERE!
    $$$setupUI$$$();
  }

  //Edit form(needs user)
  public ProductFrame (TableModel content, Object productInput) {
    super();
    setupCancelButton(cancelButton);
    setContentPane(formPanel);
    setDefaultCloseOperation(DISPOSE_ON_CLOSE);
    Product product = (Product) productInput; //force generic object to be customer

    categoryBox.setModel(new DefaultComboBoxModel<>(categories));
    categoryBox.setSelectedItem(product.getCategory());

    int id = product.getProductId();
    nameInput.setText(product.getName());
    priceInput.setText(String.valueOf(product.getItemPrice()));
    inputStock.setText(String.valueOf(product.getAmountInStock()));

    saveButton.addActionListener(new ActionListener() {
      @Override
      public void actionPerformed (ActionEvent e) {

        if (!nameInput.getText().isEmpty() &&//validation
                !inputStock.getText().isEmpty() &&
                !priceInput.getText().isEmpty()
        ) {
          Product inputProduct = new Product(
                  id,
                  (String) categoryBox.getSelectedItem(),
                  nameInput.getText(),
                  Integer.parseInt(inputStock.getText()),
                  Double.parseDouble(priceInput.getText())
          );
          try {
            ProductsDAO.updateItem(inputProduct);
            content.refreshTable();
          } catch (SQLException ex) {
            throw new RuntimeException(ex);
          }
          dispose();
        }
      }
    });
  }

  //Create form(needs user)
  public ProductFrame (TableModel content) {
    super();
    setupCancelButton(cancelButton);
    setContentPane(formPanel);
    setDefaultCloseOperation(DISPOSE_ON_CLOSE);

    categoryBox.setModel(new DefaultComboBoxModel<>(categories));

    saveButton.addActionListener(new ActionListener() {
      @Override
      public void actionPerformed (ActionEvent e) {

        if (!nameInput.getText().isEmpty() &&//validation
                !inputStock.getText().isEmpty() &&
                !priceInput.getText().isEmpty()
        ) {
          Product inputProduct = new Product(
                  (String) categoryBox.getSelectedItem(),
                  nameInput.getText(),
                  Integer.parseInt(inputStock.getText()),
                  Double.parseDouble(priceInput.getText())
          );
          try {
            ProductsDAO.createItem(inputProduct);
            content.refreshTable();
          } catch (SQLException ex) {
            throw new RuntimeException(ex);
          }
          dispose();
        }
      }
    });
  }

  /**
   * Method generated by IntelliJ IDEA GUI Designer
   * >>> IMPORTANT!! <<<
   * DO NOT edit this method OR call it in your code!
   *
   * @noinspection ALL
   */
  private void $$$setupUI$$$ () {
    formPanel = new JPanel();
    formPanel.setLayout(new GridBagLayout());
    formPanel.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEmptyBorder(30, 30, 30, 30), null, TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, null, null));
    saveButton = new JButton();
    saveButton.setText("Save");
    GridBagConstraints gbc;
    gbc = new GridBagConstraints();
    gbc.gridx = 0;
    gbc.gridy = 4;
    gbc.weightx = 1.0;
    gbc.weighty = 1.0;
    gbc.fill = GridBagConstraints.HORIZONTAL;
    formPanel.add(saveButton, gbc);
    cancelButton = new JButton();
    cancelButton.setText("Cancel");
    gbc = new GridBagConstraints();
    gbc.gridx = 2;
    gbc.gridy = 4;
    gbc.weightx = 1.0;
    gbc.weighty = 1.0;
    gbc.fill = GridBagConstraints.HORIZONTAL;
    formPanel.add(cancelButton, gbc);
    final JLabel label1 = new JLabel();
    label1.setText("Name");
    gbc = new GridBagConstraints();
    gbc.gridx = 0;
    gbc.gridy = 0;
    gbc.weightx = 1.0;
    gbc.weighty = 1.0;
    gbc.anchor = GridBagConstraints.WEST;
    formPanel.add(label1, gbc);
    nameInput = new JTextField();
    nameInput.setText("");
    gbc = new GridBagConstraints();
    gbc.gridx = 0;
    gbc.gridy = 1;
    gbc.weightx = 1.0;
    gbc.weighty = 1.0;
    gbc.anchor = GridBagConstraints.WEST;
    gbc.fill = GridBagConstraints.HORIZONTAL;
    formPanel.add(nameInput, gbc);
    final JLabel label2 = new JLabel();
    label2.setText("Price of Item");
    gbc = new GridBagConstraints();
    gbc.gridx = 0;
    gbc.gridy = 2;
    gbc.weightx = 1.0;
    gbc.weighty = 1.0;
    gbc.anchor = GridBagConstraints.WEST;
    formPanel.add(label2, gbc);
    priceInput = new JTextField();
    gbc = new GridBagConstraints();
    gbc.gridx = 0;
    gbc.gridy = 3;
    gbc.weightx = 1.0;
    gbc.weighty = 1.0;
    gbc.anchor = GridBagConstraints.WEST;
    gbc.fill = GridBagConstraints.HORIZONTAL;
    formPanel.add(priceInput, gbc);
    categoryBox = new JComboBox();
    gbc = new GridBagConstraints();
    gbc.gridx = 2;
    gbc.gridy = 1;
    gbc.weightx = 1.0;
    gbc.weighty = 1.0;
    gbc.anchor = GridBagConstraints.WEST;
    gbc.fill = GridBagConstraints.HORIZONTAL;
    formPanel.add(categoryBox, gbc);
    inputStock = new JTextField();
    inputStock.setText("");
    gbc = new GridBagConstraints();
    gbc.gridx = 2;
    gbc.gridy = 3;
    gbc.weightx = 1.0;
    gbc.weighty = 1.0;
    gbc.anchor = GridBagConstraints.WEST;
    gbc.fill = GridBagConstraints.HORIZONTAL;
    formPanel.add(inputStock, gbc);
    final JLabel label3 = new JLabel();
    label3.setText("Category");
    gbc = new GridBagConstraints();
    gbc.gridx = 2;
    gbc.gridy = 0;
    gbc.weightx = 1.0;
    gbc.weighty = 1.0;
    gbc.anchor = GridBagConstraints.WEST;
    formPanel.add(label3, gbc);
    final JLabel label4 = new JLabel();
    label4.setText("Items in Stock");
    gbc = new GridBagConstraints();
    gbc.gridx = 2;
    gbc.gridy = 2;
    gbc.weightx = 1.0;
    gbc.weighty = 1.0;
    gbc.anchor = GridBagConstraints.WEST;
    formPanel.add(label4, gbc);
  }

  /**
   * @noinspection ALL
   */
  public JComponent $$$getRootComponent$$$ () { return formPanel; }

}
