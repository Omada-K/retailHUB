package com.ui;

import com.dao.CustomersDAO;
import com.model.Customer;
import com.ui.tablemodel.TableModel;

import javax.swing.*;
import javax.swing.border.TitledBorder;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.SQLException;

public class CustomerFrame extends BaseFrame {
    private JPanel formPanel;
    private JButton saveButton;
    private JButton cancelButton;
    private JTextField nameInput;
    private JTextField telephoneInput;
    private JTextField addressInput;
    private JTextField emailInput;
    private JTextField pointsInput;
    private JTextField balanceInput;

    {
        // GUI initializer generated by IntelliJ IDEA GUI Designer
        // >>> IMPORTANT!! <<<
        // DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    //Edit form(needs user)
    public CustomerFrame(TableModel content, Object customerInput) {
        super();
        setupCancelButton(cancelButton);
        setContentPane(formPanel);
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        Customer customer = (Customer) customerInput; //force generic object to be customer

        int id = customer.getCustomerId();
        nameInput.setText(customer.getName());
        addressInput.setText(customer.getAddress());
        telephoneInput.setText(customer.getPhone());
        emailInput.setText(customer.getEmail());
        pointsInput.setText(String.valueOf(customer.getPoints()));
        balanceInput.setText(String.valueOf(customer.getBalance()));

        saveButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {

                if (nameInput.getText() != null &&//validation
                        addressInput.getText() != null &&
                        telephoneInput.getText() != null &&
                        emailInput.getText() != null &&
                        pointsInput.getText() != null
                ) {

                    Customer inputCustomer = new Customer(
                            id,
                            nameInput.getText(),
                            addressInput.getText(),
                            telephoneInput.getText(),
                            emailInput.getText(),
                            Double.parseDouble(balanceInput.getText()),
                            Integer.parseInt(pointsInput.getText())
                    );

                    try {
                        CustomersDAO.updateItem(inputCustomer);
                        content.refreshTable();
                    } catch (SQLException ex) {
                        throw new RuntimeException(ex);
                    }
                    dispose();
                }
            }
        });
    }

    //Create form(needs user)
    public CustomerFrame(TableModel content) {
        super();
        setupCancelButton(cancelButton);
        setContentPane(formPanel);
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);

        saveButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {

                if (nameInput.getText() != null &&//validation
                        addressInput.getText() != null &&
                        telephoneInput.getText() != null &&
                        emailInput.getText() != null
                ) {

                    Customer inputCustomer = new Customer(
                            nameInput.getText(),
                            addressInput.getText(),
                            telephoneInput.getText(),
                            emailInput.getText(),
                            Double.parseDouble(balanceInput.getText()),
                            Integer.parseInt(pointsInput.getText())
                    );
                    try {
                        CustomersDAO.createItem(inputCustomer);
                        content.refreshTable();
                    } catch (SQLException ex) {
                        throw new RuntimeException(ex);
                    }
                    dispose();
                }
            }
        });
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        formPanel = new JPanel();
        formPanel.setLayout(new GridBagLayout());
        formPanel.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEmptyBorder(30, 30, 30, 30), null, TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, null, null));
        saveButton = new JButton();
        saveButton.setText("Save");
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 6;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        formPanel.add(saveButton, gbc);
        cancelButton = new JButton();
        cancelButton.setText("Cancel");
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 6;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        formPanel.add(cancelButton, gbc);
        final JLabel label1 = new JLabel();
        label1.setText("Name");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        formPanel.add(label1, gbc);
        nameInput = new JTextField();
        nameInput.setText("");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        formPanel.add(nameInput, gbc);
        final JLabel label2 = new JLabel();
        label2.setText("Telephone");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        formPanel.add(label2, gbc);
        telephoneInput = new JTextField();
        telephoneInput.setText("");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 3;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        formPanel.add(telephoneInput, gbc);
        final JLabel label3 = new JLabel();
        label3.setText("Address");
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        formPanel.add(label3, gbc);
        addressInput = new JTextField();
        addressInput.setText("");
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 1;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        formPanel.add(addressInput, gbc);
        emailInput = new JTextField();
        emailInput.setText("");
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 3;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        formPanel.add(emailInput, gbc);
        final JLabel label4 = new JLabel();
        label4.setText("Email");
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 2;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        formPanel.add(label4, gbc);
        final JLabel label5 = new JLabel();
        label5.setText("Points");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 4;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        formPanel.add(label5, gbc);
        pointsInput = new JTextField();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 5;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        formPanel.add(pointsInput, gbc);
        final JLabel label6 = new JLabel();
        label6.setText("Balance");
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 4;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        formPanel.add(label6, gbc);
        balanceInput = new JTextField();
        balanceInput.setText("");
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 5;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        formPanel.add(balanceInput, gbc);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return formPanel;
    }

}
