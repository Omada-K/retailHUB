package com.ui;

import com.dao.UserDAO;
import com.model.User;
import com.ui.tablemodel.TableModel;

import javax.swing.*;
import javax.swing.border.TitledBorder;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.SQLException;

public class UserFrame extends BaseFrame {
  private JButton cancelButton;
  private JButton saveButton;
  private JTextField emailInput;
  private JTextField passwordInput;
  private JTextField nameInput;
  private JTextField confirmPasswordInput;
  private JCheckBox isManagerCheckBox;
  private JPanel formPanel;

  //Edit form(needs user)
  public UserFrame (TableModel content, Object userInput) {
    super();
    setupCancelButton(cancelButton);
    setContentPane(formPanel);
    setDefaultCloseOperation(DISPOSE_ON_CLOSE);

    User user = (User) userInput; //force generic object to be User

    int id = user.getId();
    nameInput.setText(user.getName());
    emailInput.setText(user.getEmail());
    passwordInput.setText(user.getUserPassword());
    confirmPasswordInput.setText(user.getUserPassword());
    isManagerCheckBox.setSelected(user.getIsAdmin());

    saveButton.addActionListener(new ActionListener() {
      @Override
      public void actionPerformed (ActionEvent e) {
        if (passwordInput.getText() != null &&//validation
                confirmPasswordInput.getText() != null &&
                nameInput.getText() != null &&
                emailInput.getText() != null &&
                passwordInput.getText().equals(confirmPasswordInput.getText())) {

          User inputUser = new User(
                  id, nameInput.getText(),
                  emailInput.getText(),
                  passwordInput.getText(),
                  isManagerCheckBox.isSelected());
          try {
            UserDAO.updateItem(inputUser);
            content.refreshTable();
          } catch (SQLException ex) {
            throw new RuntimeException(ex);
          }
          dispose();
        }
      }
    });
  }

  //Create user(no user required)
  public UserFrame (TableModel content) {
    super();
    setupCancelButton(cancelButton);
    setContentPane(formPanel);
    setDefaultCloseOperation(DISPOSE_ON_CLOSE);

    saveButton.addActionListener(new ActionListener() {
      @Override
      public void actionPerformed (ActionEvent e) {

        if (passwordInput.getText() != null &&//validation
                confirmPasswordInput.getText() != null &&
                nameInput.getText() != null &&
                emailInput.getText() != null &&
                passwordInput.getText().equals(confirmPasswordInput.getText())) {
          int itemsCount = content.getRowCount() + 1;
          User inputUser = new User(
                  itemsCount, nameInput.getText(),
                  emailInput.getText(),
                  passwordInput.getText(),
                  isManagerCheckBox.isSelected());
          try {
            UserDAO.createItem(inputUser);
            content.refreshTable();
          } catch (SQLException ex) {
            throw new RuntimeException(ex);
          }
          dispose();
        }
      }
    });
  }

  {
    // GUI initializer generated by IntelliJ IDEA GUI Designer
    // >>> IMPORTANT!! <<<
    // DO NOT EDIT OR ADD ANY CODE HERE!
    $$$setupUI$$$();
  }

  /**
   * Method generated by IntelliJ IDEA GUI Designer
   * >>> IMPORTANT!! <<<
   * DO NOT edit this method OR call it in your code!
   *
   * @noinspection ALL
   */
  private void $$$setupUI$$$ () {
    formPanel = new JPanel();
    formPanel.setLayout(new GridBagLayout());
    formPanel.setMinimumSize(new Dimension(480, 320));
    formPanel.setPreferredSize(new Dimension(480, 234));
    formPanel.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEmptyBorder(30, 30, 30, 30), null, TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, null, null));
    cancelButton = new JButton();
    cancelButton.setText("Cancel");
    GridBagConstraints gbc;
    gbc = new GridBagConstraints();
    gbc.gridx = 2;
    gbc.gridy = 6;
    gbc.weightx = 1.0;
    gbc.anchor = GridBagConstraints.SOUTH;
    gbc.fill = GridBagConstraints.HORIZONTAL;
    formPanel.add(cancelButton, gbc);
    saveButton = new JButton();
    saveButton.setText("Save");
    gbc = new GridBagConstraints();
    gbc.gridx = 0;
    gbc.gridy = 6;
    gbc.weightx = 1.0;
    gbc.anchor = GridBagConstraints.SOUTH;
    gbc.fill = GridBagConstraints.HORIZONTAL;
    formPanel.add(saveButton, gbc);
    emailInput = new JTextField();
    emailInput.setText("");
    gbc = new GridBagConstraints();
    gbc.gridx = 2;
    gbc.gridy = 1;
    gbc.weightx = 1.0;
    gbc.anchor = GridBagConstraints.NORTHWEST;
    gbc.fill = GridBagConstraints.HORIZONTAL;
    formPanel.add(emailInput, gbc);
    passwordInput = new JTextField();
    passwordInput.setText("");
    gbc = new GridBagConstraints();
    gbc.gridx = 0;
    gbc.gridy = 3;
    gbc.weightx = 1.0;
    gbc.anchor = GridBagConstraints.NORTHWEST;
    gbc.fill = GridBagConstraints.HORIZONTAL;
    formPanel.add(passwordInput, gbc);
    nameInput = new JTextField();
    nameInput.setText("");
    gbc = new GridBagConstraints();
    gbc.gridx = 0;
    gbc.gridy = 1;
    gbc.weightx = 1.0;
    gbc.anchor = GridBagConstraints.NORTHWEST;
    gbc.fill = GridBagConstraints.HORIZONTAL;
    formPanel.add(nameInput, gbc);
    final JLabel label1 = new JLabel();
    label1.setText("Name");
    gbc = new GridBagConstraints();
    gbc.gridx = 0;
    gbc.gridy = 0;
    gbc.weightx = 1.0;
    gbc.anchor = GridBagConstraints.NORTHWEST;
    formPanel.add(label1, gbc);
    final JLabel label2 = new JLabel();
    label2.setText("Email");
    gbc = new GridBagConstraints();
    gbc.gridx = 2;
    gbc.gridy = 0;
    gbc.weightx = 1.0;
    gbc.anchor = GridBagConstraints.NORTHWEST;
    formPanel.add(label2, gbc);
    final JLabel label3 = new JLabel();
    label3.setText("Password");
    gbc = new GridBagConstraints();
    gbc.gridx = 0;
    gbc.gridy = 2;
    gbc.weightx = 1.0;
    gbc.anchor = GridBagConstraints.NORTHWEST;
    formPanel.add(label3, gbc);
    final JLabel label4 = new JLabel();
    label4.setText("Confirm Password");
    gbc = new GridBagConstraints();
    gbc.gridx = 2;
    gbc.gridy = 2;
    gbc.weightx = 1.0;
    gbc.anchor = GridBagConstraints.WEST;
    formPanel.add(label4, gbc);
    confirmPasswordInput = new JTextField();
    gbc = new GridBagConstraints();
    gbc.gridx = 2;
    gbc.gridy = 3;
    gbc.weightx = 1.0;
    gbc.anchor = GridBagConstraints.WEST;
    gbc.fill = GridBagConstraints.HORIZONTAL;
    formPanel.add(confirmPasswordInput, gbc);
    isManagerCheckBox = new JCheckBox();
    isManagerCheckBox.setText("Is Manager");
    gbc = new GridBagConstraints();
    gbc.gridx = 0;
    gbc.gridy = 4;
    gbc.weightx = 1.0;
    gbc.anchor = GridBagConstraints.WEST;
    formPanel.add(isManagerCheckBox, gbc);
  }

  /**
   * @noinspection ALL
   */
  public JComponent $$$getRootComponent$$$ () { return formPanel; }

}
